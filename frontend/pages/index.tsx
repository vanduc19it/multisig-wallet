    import type { NextPage } from "next";
import Navbar from "../components/Navbar";

import ContractTableRow from "../components/ContractTableRow";
import DeployModal from "../components/DeployModal";
import { FACTORY_ADDRESS } from "../address/contractAddress";
import {
  Button,
  Flex,
  Skeleton,
  Table,
  Tbody,
  Td,
  Text,
  Th,
  Thead,
  Tr,
  useDisclosure,
} from "@chakra-ui/react";
import { useAddress, useContract, useContractRead } from "@thirdweb-dev/react";
import Head from "next/head";
import React from "react";

const Home: NextPage = () => {
  const address = useAddress();
  const { contract } = useContract(FACTORY_ADDRESS, "custom");
  const { data: deployedContracts, isLoading: isDeployedContractsLoading } = useContractRead(contract, "getDeployed", [address]);
  const { data: countDeployed } = useContractRead(contract, "countDeployed", [
    address,
  ]);
  const { isOpen, onClose, onOpen } = useDisclosure();

  
  return (
   <>
    <Head>
        <title>Multisig Wallet</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <DeployModal isOpen={isOpen} onClose={onClose} />

<Flex
  mt="7"
  maxW="6xl"
  mx="auto"
  w="full"
  justifyContent="space-between"
  alignItems="center"
>
  <Text fontWeight="bold" fontSize="3xl">
    Deployed wallets
  </Text>
  <Button width={200} onClick={onOpen} bg='#efaa1f' colorScheme="yellow" fontWeight={700} color="white">
    Create new wallet
  </Button>
</Flex>

<Table colorScheme="blackAlpha" maxW="6xl" w="full" mx="auto" mt={10}>
  <Thead>
    <Tr>
      <Th>Multisig Wallet Address</Th>
      <Th>Manage</Th>
    </Tr>
  </Thead>
  <Tbody>
    {isDeployedContractsLoading && (
      <Tr>
        <Td>
          <Skeleton>0x12345678901234567890</Skeleton>
        </Td>
        <Td>
          <Skeleton>Manage</Skeleton>
        </Td>
      </Tr>
    )}
    {countDeployed == 0 && (
      <Tr>
        <Td colSpan={2}>No contracts deployed.</Td>
      </Tr>
    )}
    {deployedContracts?.map((contractAddress: string) => (
      <ContractTableRow
        contractAddress={contractAddress}
        key={contractAddress}
      />
    ))}
  </Tbody>
</Table>
   </>
  );
};

export default Home;
